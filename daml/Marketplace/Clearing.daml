module Marketplace.Clearing where

import Marketplace.Notification
import Marketplace.Utils

import DA.Finance.Types


template MarginCalculation
  with
    ccp : Party
    customer : Party
    accountId : Id
    currency : Text
    targetAmount : Decimal
    calculationTime : Time
    calculationId : Text
  where
    signatory ccp
    observer customer

    key (ccp, customer, calculationId) : (Party, Party, Text)
    maintainer key._1

    choice MarginCalculation_Resolve : ContractId FulfilledMarginCalculation
      with
        note : Text
      controller ccp
      do
        create DismissibleNotification with
          sender = ccp, receiver = customer
          senderRole = Some CCPRole, text = note
        create FulfilledMarginCalculation with ..

    choice MarginCalculation_Reject : ContractId RejectedMarginCalculation
      with
        note : Text
      controller ccp
      do
        create RejectedMarginCalculation with calculation = this, ..


template FulfilledMarginCalculation
  with
    ccp : Party
    customer : Party
    accountId : Id
    currency : Text
    targetAmount : Decimal
    calculationTime : Time
    calculationId : Text
    note : Text
  where
    signatory ccp
    observer customer

    key (ccp, customer, calculationId) : (Party, Party, Text)
    maintainer key._1


template RejectedMarginCalculation
  with
    ccp : Party
    customer : Party
    calculation : MarginCalculation
    note : Text
  where
    signatory ccp
    observer customer

    key (ccp, customer, calculation.calculationId) : (Party, Party, Text)
    maintainer key._1

    choice RejectedMarginCalculation_Retry : ContractId MarginCalculation
      controller ccp
      do create calculation

    choice RejectedMarginCalculation_Cancel : ()
      controller ccp
      do return ()

    choice RejectedMarginCalculation_CustomerRetry : ContractId MarginCalculation
      controller customer
      do create calculation


template MarkToMarketCalculation
  with
    ccp : Party
    customer : Party
    accountId : Id
    currency : Text
    mtmAmount : Decimal
    calculationTime : Time
    calculationId : Text
  where
    signatory ccp
    observer customer

    key (ccp, customer, calculationId) : (Party, Party, Text)
    maintainer key._1

    choice MarkToMarketCalculation_Resolve : ContractId FulfilledMarkToMarketCalculation
      with
        note : Text
      controller customer
      do
        create DismissibleNotification with
          sender = ccp, receiver = customer
          senderRole = Some CCPRole, text = note
        create FulfilledMarkToMarketCalculation with ..

    choice MarkToMarketCalculation_Reject : ContractId RejectedMarkToMarketCalculation
      with
        note : Text
      controller customer
      do
        create RejectedMarkToMarketCalculation with calculation = this, ..


template RejectedMarkToMarketCalculation
  with
    ccp : Party
    customer : Party
    calculation : MarkToMarketCalculation
    note : Text
  where
    signatory ccp

    key (ccp, customer, calculation.calculationId) : (Party, Party, Text)
    maintainer key._1

    choice RejectedMarkToMarketCalculation_Retry : ContractId MarkToMarketCalculation
      controller ccp
      do create calculation

    choice RejectedMarkToMarketCalculation_Cancel : ()
      controller ccp
      do return ()

    choice RejectedMarkToMarketCalculation_CustomerRetry : ContractId MarkToMarketCalculation
      controller customer
      do create calculation


template FulfilledMarkToMarketCalculation
  with
    ccp : Party
    customer : Party
    accountId : Id
    currency : Text
    mtmAmount : Decimal
    calculationTime : Time
    calculationId : Text
  where
    signatory ccp
    observer customer

    key (ccp, customer, calculationId) : (Party, Party, Text)
    maintainer key._1

