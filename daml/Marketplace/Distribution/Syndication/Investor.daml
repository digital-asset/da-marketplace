module Marketplace.Distribution.Syndication.Investor where

import DA.Finance.Types (Account, Asset)
import DA.Map (empty)
import Marketplace.Custody.Model qualified as Custody
import Marketplace.Lifecycle.Redemption qualified as Lifecycle

template Role
  with
    operator : Party
    investor : Party
  where
    signatory operator, investor

    key (operator, investor) :  (Party, Party)
    maintainer key._1

    nonconsuming choice RequestRedemption : ContractId Lifecycle.InvestorRedemptionRequest
      with
        issuer : Party
        bondRegistrar : Party
        cashProvider : Party
        payingAgent : Party
        asset : Asset
      controller investor
        do
          create Lifecycle.InvestorRedemptionRequest with operator; investor; issuer; bondRegistrar; cashProvider; payingAgent; asset

    choice TerminateRole: ()
      controller operator
        do
          return ()

template Offer
  with
    operator : Party
    investor : Party
  where
    signatory operator
    observer investor

    choice Accept : (ContractId Role, ContractId Custody.SettlementInfo)
      controller investor
        do
          infoCid <- create Custody.SettlementInfo with operator; party = investor; ownAccount = None; omnibusCashAccount = None; omnibusSecuritiesAccount = None; cashAccounts = empty; securitiesAccounts = empty
          roleCid <- create Role with ..
          pure (roleCid, infoCid)

    choice Decline : ()
      controller investor
        do
          return ()

template Request
  with
    operator : Party
    investor : Party
    cashAccount : Optional Account
    securitiesAccount : Optional Account
  where
    signatory investor
    observer operator

    choice Approve : (ContractId Role, ContractId Custody.SettlementInfo)
      controller operator
        do
          infoCid <- create Custody.SettlementInfo with operator; party = investor; ownAccount = None; omnibusCashAccount = None; omnibusSecuritiesAccount = None; cashAccounts = empty; securitiesAccounts = empty
          roleCid <- create Role with ..
          pure (roleCid, infoCid)

    choice Reject : ()
      controller operator
        do
          return ()
