module Marketplace.Distribution.Syndication.Bidding.Service where

import DA.Finance.Types (Asset(..))
import DA.Finance.Utils (fetchAndArchive)
import Marketplace.Distribution.Syndication.Bidding.Model qualified as Bidding
import Marketplace.Distribution.Syndication.BookBuilding.Model qualified as BookBuilding
import Marketplace.Utils

type S = Service

template Service
  with
    operator : Party
    provider : Party
    customer : Party
  where
    signatory operator, provider, customer

    key (operator, provider, customer) : (Party, Party, Party)
    maintainer key._1

    controller customer can
      nonconsuming SubmitBid : ContractId Bidding.Bid
        with
          bidRequestCid : ContractId Bidding.BidRequest
          price : Decimal
          quantity : Decimal
        do
          Bidding.BidRequest{..} <- fetchAndArchive bidRequestCid
          create Bidding.Bid with asset = (Asset with id = deliveryId; quantity); price = (Asset with id = paymentId; quantity = price); ..

    controller provider can
      nonconsuming RequestBid : ContractId Bidding.BidRequest
        with
          buildRequestCid : ContractId BookBuilding.BuildRequest
        do
          BookBuilding.BuildRequest{issuer, dealId, trancheId, deliveryId, paymentId, size} <- fetch buildRequestCid
          create Bidding.BidRequest with investor = customer; ..

template Offer
  with
    operator : Party
    provider : Party
    customer : Party
  where
    signatory operator, provider

    controller customer can
      Accept : ContractId Service
        do
          createOrLookup Service with ..

      Decline : ()
        do
          return ()

    controller provider can
      Withdraw : ()
        do pure ()

template Request
  with
    provider : Party
    customer : Party
  where
    signatory customer
    observer provider

    controller customer can
      Cancel : ()
        do pure ()

    controller provider can
      Reject : ()
        do pure ()

    choice Approve : ContractId Service
      with
        operator : Party
      controller operator, provider
      do
        createOrLookup Service with ..
