module Marketplace.Distribution.Syndication.BookBuilding.Service where

import Marketplace.Distribution.Syndication.BookBuilding.Model qualified as BookBuilding
import Marketplace.Distribution.Syndication.Structuring.Model qualified as Structuring
import Marketplace.Utils

template Service
  with
    operator : Party
    provider : Party
    customer : Party
  where
    signatory operator, provider, customer

    key (operator, provider, customer) : (Party, Party, Party)
    maintainer key._1

    nonconsuming choice RequestBookBuilding : ContractId BookBuilding.BuildRequest
      with
        trancheCid : ContractId Structuring.Tranche
      controller customer
        do
          Structuring.Tranche{..} <- fetch trancheCid
          create BookBuilding.BuildRequest with operator; provider; customer; issuer; dealId; trancheId; deliveryId; paymentId; size

template Offer
  with
    operator : Party
    provider : Party
    customer : Party
  where
    signatory operator, provider
    observer customer

    choice Accept : ContractId Service
      controller customer
        do
          createOrLookup Service with ..

    choice Decline : ()
      controller customer
        do
          return ()

    choice Withdraw : ()
      controller provider
        do pure ()

template Request
  with
    provider : Party
    customer : Party
  where
    signatory customer
    observer provider

    choice Cancel : ()
      controller customer
        do pure ()

    choice Reject : ()
      controller provider
        do pure ()

    choice Approve : ContractId Service
      with
        operator : Party
      controller operator, provider
      do
        createOrLookup Service with ..
