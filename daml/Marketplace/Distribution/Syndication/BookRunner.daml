module Marketplace.Distribution.Syndication.BookRunner where

import Marketplace.Distribution.Syndication.Structuring.Service qualified as Structuring
import Marketplace.Utils
import DA.Set (Set)

template Role
  with
    operator : Party
    provider : Party
  where
    signatory operator, provider

    key (operator, provider) :  (Party, Party)
    maintainer key._1

    controller provider can

      nonconsuming OfferStructuringService : ContractId Structuring.Offer
        with
          customer : Party
        do
          create Structuring.Offer with ..

      nonconsuming ApproveStructuringRequest : ContractId Structuring.Service
        with
          structuringRequestCid : ContractId Structuring.Request
        do
          exercise structuringRequestCid Structuring.Approve with ..

      nonconsuming TerminateStructuringService : ()
        with
          structuringServiceCid : ContractId Structuring.Service
        do
          archive structuringServiceCid

    controller operator can
      TerminateRole: ()
        do
          return ()

template Offer
  with
    operator : Party
    provider : Party
    observers : Set Party
  where
    signatory operator

    controller provider can
      Accept : ContractId Role
        do
          createOrLookup Role with ..

      Decline : ()
        do
          return ()

template Request
  with
    provider : Party
    operator : Party
  where
    signatory provider

    controller operator can
      Approve : ContractId Role
        do
          createOrLookup Role with ..

      Reject : ()
        do
          return ()
