module Marketplace.Issuance.Role where

import Marketplace.Lifecycle.Service qualified as Lifecycle
import Marketplace.Custody.Model qualified as Custody

template Role
  with
    operator : Party
    issuer : Party
  where
    signatory operator, issuer

    key (operator, issuer) :  (Party, Party)
    maintainer key._1

    controller issuer can

      nonconsuming OfferLifecycleService : ContractId Lifecycle.Offer
        with
          bondRegistrar : Party
          cashProvider : Party
          payingAgent : Party
        do
          create Lifecycle.Offer with ..

      nonconsuming ApproveLifecycleRequest : ContractId Lifecycle.Service
        with
          requestCid : ContractId Lifecycle.Request
        do
          exercise requestCid Lifecycle.Approve

    controller operator can
      TerminateRole: ()
        do
          return ()

template Offer
  with
    operator : Party
    issuer : Party
  where
    signatory operator

    controller issuer can
      Accept : (ContractId Role, ContractId Custody.SettlementInfo)
        do
          infoCid <- create Custody.SettlementInfo with operator; party = issuer; ownAccount = None; cashAccount = None; securitiesAccount = None
          roleCid <- create Role with ..
          pure (roleCid, infoCid)

      Decline : ()
        do
          return ()

template Request
  with
    operator : Party
    issuer : Party
  where
    signatory issuer

    controller operator can
      Approve : (ContractId Role, ContractId Custody.SettlementInfo)
        do
          infoCid <- create Custody.SettlementInfo with operator; party = issuer; ownAccount = None; cashAccount = None; securitiesAccount = None
          roleCid <- create Role with ..
          pure (roleCid, infoCid)

      Reject : ()
        do
          return ()
