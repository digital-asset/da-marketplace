module Marketplace.Clearing.Role where

import DA.Finance.Types

import Marketplace.Clearing.Service qualified as Clearing
import Marketplace.Clearing.Market.Service qualified as Market
import Marketplace.Utils
import DA.Set (Set)

template Role
  with
    operator : Party
    provider : Party
    observers : Set Party
    ccpAccount : Account
  where
    signatory operator, provider
    observer observers

    key (operator, provider) :  (Party, Party)
    maintainer key._1

    controller provider can

      nonconsuming OfferClearingService : ContractId Clearing.Offer
        with
          customer : Party
        do
          create Clearing.Offer with ..

      nonconsuming ApproveClearingRequest : ContractId Clearing.Service
        with
          clearingRequestCid : ContractId Clearing.Request
        do
          exercise clearingRequestCid Clearing.Approve with ..

      nonconsuming RejectClearingRequest : ()
        with
          clearingRequestCid : ContractId Clearing.Request
        do
          exercise clearingRequestCid Clearing.Reject

      nonconsuming TerminateClearingService : ()
        with
          custodyServiceCid : ContractId Clearing.Service
        do
          archive custodyServiceCid

      nonconsuming OfferMarketService : ContractId Market.Offer
        with
          customer : Party
        do
          create Market.Offer with ..

      nonconsuming ApproveMarketRequest : ContractId Market.Service
        with
          marketRequestCid : ContractId Market.Request
        do
          exercise marketRequestCid Market.Approve with ..

      nonconsuming RejectMarketRequest : ()
        with
          marketRequestCid : ContractId Market.Request
        do
          exercise marketRequestCid Market.Reject

      nonconsuming TerminateMarketService : ()
        with
          marketServiceCid : ContractId Market.Service
        do
          archive marketServiceCid

template Offer
  with
    operator : Party
    provider : Party
    observers : Set Party
  where
    signatory operator

    controller provider can
      Accept : (ContractId Role, ContractId Market.Service)
        with
          ccpAccount : Account
        do
          marketCid <- createOrLookup Market.Service with customer = provider, ..
          roleCid   <- createOrLookup Role with ..
          return (roleCid, marketCid)

      Decline : ()
        do
          return ()

template Request
  with
    provider : Party
    operator : Party
    ccpAccount : Account
  where
    signatory provider

    controller operator can
      Approve : (ContractId Role, ContractId Market.Service)
        with
          observers : Set Party
        do
          marketCid <- createOrLookup Market.Service with customer = provider, ..
          roleCid   <- createOrLookup Role with ..
          return (roleCid, marketCid)

      Reject : ()
        do
          return ()

template RequestRoleTermination
  with
    operator : Party
    provider : Party
    roleCid  : ContractId Role
  where
    signatory provider

    controller operator can
      TerminateAccept: ()
        do
          archive roleCid

      TerminateDecline: ()
        do
          return ()
