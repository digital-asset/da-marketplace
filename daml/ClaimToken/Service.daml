module ClaimToken.Service where

import ClaimToken.Model
import DA.Finance.Asset

template Service with
  operator: Party
  provider: Party
  owner: Party

    where
      signatory operator, provider
      observer owner

      key (operator, provider, owner) : (Party, Party, Party)
      maintainer key._1
    
      controller owner can 
        nonconsuming Mint : ContractId AssetDeposit
          with 
            assetDepositCid : ContractId AssetDeposit
            claimTokenR : ClaimTokenR 
          do
            originalAssetDeposit <- fetch assetDepositCid
            assertMsg "provider and owner of provided assetDeposit does not match with the Service Contract used"
              (originalAssetDeposit.account.owner == owner && originalAssetDeposit.account.provider == provider) -- todo refactor
            archive assetDepositCid
            create originalAssetDeposit with asset = (originalAssetDeposit.asset with id = claimTokenR.id)

      controller owner can 
        nonconsuming OfferTransferRelationship : ContractId TransferRelationshipOffer
          with 
            receiver: Party
          do
            create TransferRelationshipOffer with sender = owner; ..

      controller owner can
        nonconsuming Burn : ContractId AssetDeposit
          with
            assetDepositCid : ContractId AssetDeposit
            claimToken : ClaimToken
          do 
            claimTokenAssetDeposit <- fetch assetDepositCid
            archive assetDepositCid
            assertMsg "provider and owner of provided assetDeposit does not match with the Service Contract used" 
              (claimTokenAssetDeposit.account.owner == owner && claimTokenAssetDeposit.account.provider == provider) -- todo refactor
            create claimTokenAssetDeposit with asset = (claimTokenAssetDeposit.asset with id = claimToken.originalId)

template Request 
  with
    operator : Party
    provider : Party
    owner : Party

  where 
    signatory operator
  
    controller provider can 
      Approve : ContractId Service
        do
          create Service with ..
            


    