module Tests.Distribution.Syndication.Redemption where

import Daml.Script
import DA.Date (date, Month(..))
import Marketplace.Lifecycle.Model qualified as Lifecycle
import Tests.Distribution.Syndication.Setup (setup, Parties(..))
import Tests.Distribution.Syndication.Issuance (issuance, Issuance(..))
import Tests.Distribution.Syndication.Lifecycle (lifecycle)

redemption : Script ()
redemption = do

  parties@Parties{..} <- setup
  Issuance{security} <- issuance parties
  submitMulti [operator, bondRegistrar] [] do createCmd Lifecycle.Today with operator; provider = bondRegistrar; date = date 2021 Jan 15
  lifecycle parties security (date 2022 Jan 15)
  lifecycle parties (security with assetId.version = 1) (date 2022 Jul 15)
  lifecycle parties (security with assetId.version = 2) (date 2023 Jan 15)
  lifecycle parties (security with assetId.version = 3) (date 2023 Jul 15)

  pure ()
