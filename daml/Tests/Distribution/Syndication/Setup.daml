module Tests.Distribution.Syndication.Setup where

import Daml.Script
import DA.Set (empty)
import Marketplace.Operator.Role qualified as Operator
import Tests.Distribution.Syndication.Util
import Marketplace.Utils (createLabel)

data Parties = Parties
  with
    operator : Party
    cashProvider : Party
    bondRegistrar : Party
    lm1 : Party
    lm2 : Party
    lm3 : Party
    cm1 : Party
    investor1 : Party
    investor2 : Party
    investor3 : Party
    investor4 : Party
    custodian1 : Party
    custodian2 : Party
    custodian3 : Party
    custodian4 : Party
    custodian5 : Party
    issuer : Party
    public : Party
    structurer : Party
    settlementBank : Party
    bndBank : Party
    payingAgent : Party

setup : Script Parties
setup = do
  operator      <- allocatePartyWithHint "Operator" $ PartyIdHint "Operator"
  cashProvider  <- allocatePartyWithHint "CashProvider" $ PartyIdHint "CashProvider"
  bondRegistrar <- allocatePartyWithHint "BondRegistrar" $ PartyIdHint "BondRegistrar"
  payingAgent <- allocatePartyWithHint "PayingAgent" $ PartyIdHint "PayingAgent"
  lm1  <- allocatePartyWithHint "LeadMgr1" $ PartyIdHint "LeadMgr1"
  lm2  <- allocatePartyWithHint "LeadMgr2" $ PartyIdHint "LeadMgr2"
  lm3  <- allocatePartyWithHint "LeadMgr3" $ PartyIdHint "LeadMgr3"
  cm1  <- allocatePartyWithHint "CoMgr31" $ PartyIdHint "CoMgr31"
  investor1 <- allocatePartyWithHint "Investor1" $ PartyIdHint "Investor1"
  investor2 <- allocatePartyWithHint "Investor2" $ PartyIdHint "Investor2"
  investor3 <- allocatePartyWithHint "Investor3" $ PartyIdHint "Investor3"
  investor4 <- allocatePartyWithHint "Investor4" $ PartyIdHint "Investor4"
  custodian1 <- allocatePartyWithHint "Custodian1" $ PartyIdHint "Custodian1"
  custodian2 <- allocatePartyWithHint "Custodian2" $ PartyIdHint "Custodian2"
  custodian3 <- allocatePartyWithHint "Custodian3" $ PartyIdHint "Custodian3"
  custodian4 <- allocatePartyWithHint "Custodian4" $ PartyIdHint "Custodian4"
  custodian5 <- allocatePartyWithHint "Custodian5" $ PartyIdHint "Custodian5"
  issuer <- allocatePartyWithHint "Issuer" $ PartyIdHint "Issuer"
  public <- allocatePartyWithHint "Public" $ PartyIdHint "Public"
  let
    structurer = lm1
    settlementBank = lm2
    bndBank = lm3

  -- Roles
  submit operator do createCmd Operator.Role with operator; observers = empty

  -- Custodian roles
  createCustodianRole operator cashProvider
  createCustodianRole operator bondRegistrar
  createCustodianRole operator custodian1
  createCustodianRole operator custodian2
  createCustodianRole operator custodian3
  createCustodianRole operator custodian4
  createCustodianRole operator custodian5
  createCustodianRole operator lm1
  createCustodianRole operator lm2
  createCustodianRole operator lm3

  -- Investor roles
  createInvestorRole operator investor1
  createInvestorRole operator investor2
  createInvestorRole operator investor3
  createInvestorRole operator investor4
  createTradingService operator investor1
  createTradingService operator investor2
  createTradingService operator investor3
  createTradingService operator investor4

  -- Issuer roles
  createIssuerRole operator issuer
  createIssuanceService operator cashProvider cashProvider
  createIssuanceService operator bondRegistrar issuer
  createInstrumentService operator bondRegistrar issuer

  -- Structurer roles
  createStructurerRole operator structurer
  createStructuringService operator structurer issuer

  -- Distributor roles
  createDistributorRole operator lm1
  createDistributorRole operator lm2
  createDistributorRole operator lm3
  createDistributorRole operator cm1

  -- Services
  -- Custody services and accounts
  -- 1st level
  createCustodyService operator cashProvider issuer
  createCustodyService operator cashProvider lm1
  createCustodyService operator cashProvider lm2
  createCustodyService operator cashProvider lm3
  aiCid1 <- openAccount operator cashProvider issuer $ createLabel cashProvider issuer
  aiCid2 <- openAccount operator cashProvider lm1 $ createLabel cashProvider lm1
  aiCid3 <- openAccount operator cashProvider lm2 $ createLabel cashProvider lm2
  aiCid4 <- openAccount operator cashProvider lm3 $ createLabel cashProvider lm3
  setOmnibusCashAccount operator issuer aiCid1
  setOmnibusCashAccount operator lm1 aiCid2
  setOmnibusCashAccount operator lm2 aiCid3
  setOmnibusCashAccount operator lm3 aiCid4

  createCustodyService operator bondRegistrar bondRegistrar
  createCustodyService operator bondRegistrar issuer
  createCustodyService operator bondRegistrar custodian1
  createCustodyService operator bondRegistrar custodian2
  createCustodyService operator bondRegistrar custodian3
  createCustodyService operator bondRegistrar custodian4
  aiCid1 <- openAccount operator bondRegistrar bondRegistrar $ createLabel bondRegistrar bondRegistrar
  aiCid2 <- openAccount operator bondRegistrar issuer $ createLabel bondRegistrar issuer
  aiCid3 <- openAccount operator bondRegistrar custodian1 $ createLabel bondRegistrar custodian1
  aiCid3a <- openAccount operator bondRegistrar custodian1 $ "Segregated-" <> partyToText investor1 <> "@" <> partyToText custodian1 <> "@" <> partyToText bondRegistrar
  aiCid4 <- openAccount operator bondRegistrar custodian2 $ createLabel bondRegistrar custodian2
  aiCid5 <- openAccount operator bondRegistrar custodian3 $ createLabel bondRegistrar custodian3
  aiCid6 <- openAccount operator bondRegistrar custodian4 $ createLabel bondRegistrar custodian4
  setOmnibusSecuritiesAccount operator bondRegistrar aiCid1
  setOmnibusSecuritiesAccount operator issuer aiCid2
  setOmnibusSecuritiesAccount operator custodian1 aiCid3
  setSecuritiesAccountForParty operator custodian1 investor1 aiCid3a
  setOmnibusSecuritiesAccount operator custodian2 aiCid4
  setOmnibusSecuritiesAccount operator custodian3 aiCid5
  setOmnibusSecuritiesAccount operator custodian4 aiCid6

  -- 2nd level
  createCustodyService operator custodian1 lm1
  createCustodyService operator custodian1 investor1
  aiCid1 <- openAccount operator custodian1 lm1 $ createLabel custodian1 lm1
  aiCid2 <- openAccount operator custodian1 investor1 $ createLabel custodian1 investor1
  aiCid3 <- openAccount operator custodian1 investor1 $ createLabel custodian1 investor1 <> "-2"
  setOmnibusSecuritiesAccount operator lm1 aiCid1
  setOmnibusSecuritiesAccount operator investor1 aiCid2

  createCustodyService operator custodian2 lm2
  createCustodyService operator custodian2 investor2
  aiCid1 <- openAccount operator custodian2 lm2 $ createLabel custodian2 lm2
  aiCid2 <- openAccount operator custodian2 investor2 $ createLabel custodian2 investor2
  setOmnibusSecuritiesAccount operator lm2 aiCid1
  setOmnibusSecuritiesAccount operator investor2 aiCid2

  createCustodyService operator custodian3 lm3
  aiCid1 <- openAccount operator custodian3 lm3 $ createLabel custodian3 lm3
  setOmnibusSecuritiesAccount operator lm3 aiCid1
  createCustodyService operator custodian4 custodian5
  aiCid1 <- openAccount operator custodian4 custodian5 $ createLabel custodian4 custodian5
  setOmnibusSecuritiesAccount operator custodian5 aiCid1

  -- 3rd level
  createCustodyService operator custodian5 investor3
  createCustodyService operator custodian5 investor4
  aiCid1 <- openAccount operator custodian5 investor3 $ createLabel custodian5 investor3
  aiCid2 <- openAccount operator custodian5 investor4 $ createLabel custodian5 investor4
  setOmnibusSecuritiesAccount operator investor3 aiCid1
  setOmnibusSecuritiesAccount operator investor4 aiCid2

  createCustodyService operator lm1 investor1
  aiCid1 <- openAccount operator lm1 investor1 $ createLabel lm1 investor1
  setOmnibusCashAccount operator investor1 aiCid1

  createCustodyService operator lm2 investor2
  aiCid1 <- openAccount operator lm2 investor2 $ createLabel lm2 investor2
  setOmnibusCashAccount operator investor2 aiCid1

  createCustodyService operator lm3 investor3
  createCustodyService operator lm3 investor4
  aiCid1 <- openAccount operator lm3 investor3 $ createLabel lm3 investor3
  aiCid2 <- openAccount operator lm3 investor4 $ createLabel lm3 investor4
  setOmnibusCashAccount operator investor3 aiCid1
  setOmnibusCashAccount operator investor4 aiCid2

  -- Distribution services
  createBookBuildingService operator lm1 issuer
  createBiddingService operator lm1 investor1
  createBookBuildingService operator lm2 issuer
  createBiddingService operator lm2 investor2
  createBookBuildingService operator lm3 issuer
  createBookBuildingService operator cm1 lm3
  createBiddingService operator cm1 investor3
  createBiddingService operator cm1 investor4

  -- Lifecycling services
  createLifecycleService operator issuer bondRegistrar cashProvider payingAgent

  -- Snapshot services
  createSnapshotService operator payingAgent
  

  -- Reporting services
  createReportingService operator bondRegistrar
  createReportingService operator custodian1
  createReportingService operator custodian2
  createReportingService operator custodian3
  createReportingService operator custodian4
  createReportingService operator custodian5

  createReportingService operator cashProvider
  createReportingService operator lm1
  createReportingService operator lm2
  createReportingService operator lm3

  pure Parties with ..